import { Dimensions, Platform, NativeModules } from 'react-native';
import Constants from 'expo-constants';
import { KAKAO_MAP_API_KEY as ENV_KAKAO_MAP_API_KEY } from '@env';

const { width, height } = Dimensions.get('window');

// Í∏∞Ï§Ä ÌôîÎ©¥ ÌÅ¨Í∏∞ (iPhone 14 Í∏∞Ï§Ä: 393 x 852)
export const BASE_WIDTH = 393;
export const BASE_HEIGHT = 852;

// Î∞òÏùëÌòï Ïä§ÏºÄÏùº Í≥ÑÏÇ∞
export const SCALE = Math.min(width / BASE_WIDTH, height / BASE_HEIGHT);

// Ïã§Ï†ú ÌôîÎ©¥ ÌÅ¨Í∏∞ (Î∞òÏùëÌòï)
export const SCREEN_WIDTH = width;
export const SCREEN_HEIGHT = height;

// Î∞òÏùëÌòï ÌÅ¨Í∏∞ Í≥ÑÏÇ∞ Ìï®Ïàò
export const scaleSize = (size: number) => size * SCALE;
export const scaleWidth = (width: number) => width * (SCREEN_WIDTH / BASE_WIDTH);
export const scaleHeight = (height: number) => height * (SCREEN_HEIGHT / BASE_HEIGHT);

// Safe Area Ï†ïÎ≥¥ (ÎèôÏ†Å Í≥ÑÏÇ∞)
export const SAFE_AREA_INSETS = {
  top: Platform.OS === 'ios' ? (height > 800 ? 47 : 20) : 0,
  bottom: Platform.OS === 'ios' ? (height > 800 ? 34 : 0) : 0,
  left: 0,
  right: 0,
};

// Ïã§Ï†ú ÏÇ¨Ïö© Í∞ÄÎä•Ìïú ÌôîÎ©¥ ÌÅ¨Í∏∞ Í≥ÑÏÇ∞ (Î∞òÏùëÌòï)
export const USABLE_WIDTH = SCREEN_WIDTH - SAFE_AREA_INSETS.left - SAFE_AREA_INSETS.right;
export const USABLE_HEIGHT = SCREEN_HEIGHT - SAFE_AREA_INSETS.top - SAFE_AREA_INSETS.bottom;

// Í∏∞Ï°¥ Ìò∏ÌôòÏÑ±ÏùÑ ÏúÑÌïú ÏÉÅÏàò (deprecated)
export const IPHONE_WIDTH = SCREEN_WIDTH;
export const IPHONE_HEIGHT = SCREEN_HEIGHT;

// ÏÉâÏÉÅ ÏÉÅÏàò
export const COLORS = {
  primary: '#138072',
  secondary: '#81C784',
  accent: '#FFE55C',
  background: '#F5F5F5',
  white: '#FFFFFF',
  text: '#333333',
  textLight: '#666666',
  textLighter: '#999999',
  border: '#E5E7EB',
  success: '#10B981',
  warning: '#F59E0B',
  error: '#EF4444',
  blue: '#007AFF',
  GREEN: '#00A651',
  RED: '#FF6B6B',
} as const;

// Îì±Í∏â ÏãúÏä§ÌÖú ÏÉÅÏàò
export const ECO_LEVELS = [
  {
    id: 'beginner',
    name: 'ÏπúÌôòÍ≤Ω ÏÉàÎÇ¥Í∏∞',
    description: 'ÏûëÏùÄ Ïã§Ï≤úÎ∂ÄÌÑ∞ ÏãúÏûëÌï¥Î≥¥ÏÑ∏Ïöî',
    requiredPoints: 0,
    icon: 'üå±',
    color: '#81C784',
  },
  {
    id: 'intermediate',
    name: 'ÏπúÌôòÍ≤Ω Ïã§Ï≤úÍ∞Ä',
    description: 'Íæ∏Ï§ÄÌïú ÎÖ∏Î†•Ïù¥ ÎπõÎÇòÍ≥† ÏûàÏñ¥Ïöî',
    requiredPoints: 50000,
    icon: 'üå≥',
    color: '#66BB6A',
  },
  {
    id: 'expert',
    name: 'ÏπúÌôòÍ≤Ω Îã¨Ïù∏',
    description: 'ÎãπÏã†Ïù¥ Î∞îÎ°ú ÏßÄÍµ¨Ïùò ÏòÅÏõÖÏûÖÎãàÎã§',
    requiredPoints: 200000,
    icon: 'üåç',
    color: '#4CAF50',
  },
] as const;

// ÏóÖÏ†Å ÏãúÏä§ÌÖú ÏÉÅÏàò
export const ACHIEVEMENTS = [
  {
    id: 'first_step',
    name: 'Ï≤´ Í±∏Ïùå',
    description: 'Ï≤´ Î≤àÏß∏ ÏπúÌôòÍ≤Ω ÌôúÎèôÏùÑ ÏôÑÎ£åÌñàÏñ¥Ïöî',
    icon: 'üë£',
  },
  {
    id: 'weekly_streak',
    name: 'ÏùºÏ£ºÏùº Ïó∞ÏÜç',
    description: 'ÏùºÏ£ºÏùº Ïó∞ÏÜçÏúºÎ°ú ÏπúÌôòÍ≤Ω ÌôúÎèôÏùÑ ÌñàÏñ¥Ïöî',
    icon: 'üî•',
  },
  {
    id: 'monthly_streak',
    name: 'Ìïú Îã¨ Ïó∞ÏÜç',
    description: 'Ìïú Îã¨ Ïó∞ÏÜçÏúºÎ°ú ÏπúÌôòÍ≤Ω ÌôúÎèôÏùÑ ÌñàÏñ¥Ïöî',
    icon: 'üìÖ',
  },
  {
    id: 'carbon_10kg',
    name: 'ÌÉÑÏÜå Ï†àÏïΩ 10kg',
    description: 'Ï¥ù 10kgÏùò ÌÉÑÏÜåÎ•º Ï†àÏïΩÌñàÏñ¥Ïöî',
    icon: 'üå±',
  },
  {
    id: 'carbon_50kg',
    name: 'ÌÉÑÏÜå Ï†àÏïΩ 50kg',
    description: 'Ï¥ù 50kgÏùò ÌÉÑÏÜåÎ•º Ï†àÏïΩÌñàÏñ¥Ïöî',
    icon: 'üåø',
  },
  {
    id: 'points_1000',
    name: 'ÏóêÏΩîÎ®∏Îãà 1,000P',
    description: 'Ï¥ù 1,000PÏùò ÏóêÏΩîÎ®∏ÎãàÎ•º Î™®ÏïòÏñ¥Ïöî',
    icon: 'üí∞',
  },
  {
    id: 'points_5000',
    name: 'ÏóêÏΩîÎ®∏Îãà 5,000P',
    description: 'Ï¥ù 5,000PÏùò ÏóêÏΩîÎ®∏ÎãàÎ•º Î™®ÏïòÏñ¥Ïöî',
    icon: 'ÔøΩÔøΩ',
  },
] as const;

// Ï†ÅÍ∏à ÏÉÅÌíà Îç∞Ïù¥ÌÑ∞ (MyScreenÏóêÏÑú ÏÇ¨Ïö©)
export const SAVINGS_PRODUCTS = [
  {
    id: 'earth_savings',
    name: 'ÏßÄÍµ¨ÏÇ¨Îûë Ï†ÅÍ∏à',
    accountNumber: '506-910483-06021',
    balance: 10000,
    currency: 'Ïõê',
    startDate: '2025-01-11',
    maturityDate: '2026-01-11',
    baseRate: 1.8,
    preferentialRate: 2.5,
    finalRate: 4.3,
    features: {
      periodMonths: 12,
      minJoin: 10000,
      maxJoin: 300000,
      depositType: 'ÏûêÏú†Ï†ÅÎ¶ΩÏãù',
      interestPayment: 'ÎßåÍ∏∞ÏùºÏãúÏßÄÍ∏âÏãù',
    },
    donation: {
      description: 'ÎßåÍ∏∞ Ïù¥ÏûêÎ•º ÌôòÍ≤ΩÎ≥¥Ìò∏Îã®Ï≤¥Ïóê Ï†ÑÎ∂Ä ÎòêÎäî ÏùºÎ∂Ä ÌõÑÏõê',
      organizations: ['ÌôòÍ≤ΩÏö¥ÎèôÏó∞Ìï© (KFEM)', 'Í∑∏Î¶∞ÌîºÏä§ ÏΩîÎ¶¨ÏïÑ', 'ÏÇ∞Î¶ºÏ≤≠ ÎÇòÎ¨¥Ïã¨Í∏∞ ÌîÑÎ°úÏ†ùÌä∏', 'ÌïúÍµ≠ÌôòÍ≤ΩÎ≥¥Ï†ÑÌòëÌöå'],
      options: ['Ïù¥Ïûê Ï†ÑÏï°', 'Ïù¥ÏûêÏùò 50%', 'Ïù¥ÏûêÏùò 10%'],
    },
    rateNoticeDate: '2025-08-06',
  },
];

export const RECOMMENDED_SAVINGS = [
  {
    id: 'green_world_savings',
    name: 'ÌïòÎÇògreenÏÑ∏ÏÉÅ Ï†ÅÍ∏à',
    tagline:
      'ÌôòÍ≤ΩÏùÑ ÏßÄÌÇ§Îäî ÎßàÏùåÏùÑ Îã¥ÏïÑ, ÌôòÍ≤Ω Ïã§Ï≤ú ÌôúÎèôÍ≥º Í∑∏Î¶∞ÎùºÏù¥ÌîÑ Ïπ¥Îìú ÏÇ¨Ïö© Ïã§Ï†ÅÏúºÎ°ú Ïö∞ÎåÄÍ∏àÎ¶¨Î•º Ï†úÍ≥µÌïòÎäî ÌïòÎÇòÏõêÌÅê Ï†ÑÏö© ÏÉÅÌíà',
    rate: {
      base: 2.0,
      max: 7.0,
      noticeDate: '2025-08-05',
    },
    target: 'Îßå 14ÏÑ∏ Ïù¥ÏÉÅ Í∞úÏù∏ ÎòêÎäî Í∞úÏù∏ÏÇ¨ÏóÖÏûê (1Ïù∏ 1Í≥ÑÏ¢å)',
    amountMin: 10000,
    amountMax: 500000,
    periodNotice: 'Í∞ÄÏûÖÏûêÎ≥Ñ ÏÉÅÏù¥ [Í∞ÄÏûÖÏùº ~ 2026.12.31(Ïùº)]',
    maturityDate: '2026-12-31',
  },
];

// Í∏∞Ï°¥ ÌïòÎìúÏΩîÎî©Îêú Îç∞Ïù¥ÌÑ∞Îäî productApi.tsÏùò API Ìò∏Ï∂úÎ°ú ÎåÄÏ≤¥Îê®
// Ïù¥ ÏÉÅÏàòÎì§ÏùÄ API Ìò∏Ï∂úÏù¥ Ïã§Ìå®Ìï† Í≤ΩÏö∞Î•º ÏúÑÌïú fallback Îç∞Ïù¥ÌÑ∞Î°ú ÏÇ¨Ïö©
export const FALLBACK_SAVINGS_PRODUCTS = [
  {
  id: 'earth_savings',
  name: 'ÏßÄÍµ¨ÏÇ¨Îûë Ï†ÅÍ∏à',
  accountNumber: '506-910483-06021',
  balance: 10000,
  currency: 'Ïõê',
  startDate: '2025-01-11',
  maturityDate: '2026-01-11',
  baseRate: 1.8,
  preferentialRate: 2.5,
  finalRate: 4.3,
  features: {
    periodMonths: 12,
    minJoin: 10000,
    maxJoin: 300000,
    depositType: 'ÏûêÏú†Ï†ÅÎ¶ΩÏãù',
    interestPayment: 'ÎßåÍ∏∞ÏùºÏãúÏßÄÍ∏âÏãù',
  },
  donation: {
    description: 'ÎßåÍ∏∞ Ïù¥ÏûêÎ•º ÌôòÍ≤ΩÎ≥¥Ìò∏Îã®Ï≤¥Ïóê Ï†ÑÎ∂Ä ÎòêÎäî ÏùºÎ∂Ä ÌõÑÏõê',
    organizations: ['ÌôòÍ≤ΩÏö¥ÎèôÏó∞Ìï© (KFEM)', 'Í∑∏Î¶∞ÌîºÏä§ ÏΩîÎ¶¨ÏïÑ', 'ÏÇ∞Î¶ºÏ≤≠ ÎÇòÎ¨¥Ïã¨Í∏∞ ÌîÑÎ°úÏ†ùÌä∏', 'ÌïúÍµ≠ÌôòÍ≤ΩÎ≥¥Ï†ÑÌòëÌöå'],
    options: ['Ïù¥Ïûê Ï†ÑÏï°', 'Ïù¥ÏûêÏùò 50%', 'Ïù¥ÏûêÏùò 10%'],
  },
  rateNoticeDate: '2025-08-06',
  },
];

export const FALLBACK_RECOMMENDED_SAVINGS = [
  {
    id: 'green_world_savings',
    name: 'ÌïòÎÇògreenÏÑ∏ÏÉÅ Ï†ÅÍ∏à',
    tagline:
      'ÌôòÍ≤ΩÏùÑ ÏßÄÌÇ§Îäî ÎßàÏùåÏùÑ Îã¥ÏïÑ, ÌôòÍ≤Ω Ïã§Ï≤ú ÌôúÎèôÍ≥º Í∑∏Î¶∞ÎùºÏù¥ÌîÑ Ïπ¥Îìú ÏÇ¨Ïö© Ïã§Ï†ÅÏúºÎ°ú Ïö∞ÎåÄÍ∏àÎ¶¨Î•º Ï†úÍ≥µÌïòÎäî ÌïòÎÇòÏõêÌÅê Ï†ÑÏö© ÏÉÅÌíà',
    rate: {
      base: 2.0,
      max: 7.0,
      noticeDate: '2025-08-05',
    },
    target: 'Îßå 14ÏÑ∏ Ïù¥ÏÉÅ Í∞úÏù∏ ÎòêÎäî Í∞úÏù∏ÏÇ¨ÏóÖÏûê (1Ïù∏ 1Í≥ÑÏ¢å)',
    amountMin: 10000,
    amountMax: 500000,
    periodNotice: 'Í∞ÄÏûÖÏûêÎ≥Ñ ÏÉÅÏù¥ [Í∞ÄÏûÖÏùº ~ 2026.12.31(Ïùº)]',
    maturityDate: '2026-12-31',
  },
];

// Ïπ¥Ïπ¥Ïò§ ÏßÄÎèÑ API ÏÑ§Ï†ï
export const KAKAO_MAP_API_KEY = ENV_KAKAO_MAP_API_KEY;

// API ÏÑ§Ï†ï - ÌîåÎû´ÌèºÎ≥Ñ ÏµúÏ†ÅÌôî
export const API_BASE_URL = (() => {
  // MacÏùò Ïã§Ï†ú IP Ï£ºÏÜå (ÌòÑÏû¨: 192.168.123.7)
  const MAC_IP = '192.168.123.11';
  
  if (Platform.OS === 'android') {
    // ÏïàÎìúÎ°úÏù¥Îìú ÏóêÎÆ¨Î†àÏù¥ÌÑ∞Îäî 10.0.2.2Î•º ÏÇ¨Ïö© (Ìò∏Ïä§Ìä∏ Î®∏Ïã†Ïùò localhost)
    // ÌïòÎÇòÍ∑∏Î¶∞ÏÑ∏ÏÉÅ ÏÑúÎ≤Ñ (Î°úÍ∑∏Ïù∏, Ï±åÎ¶∞ÏßÄ Îì±)
    return 'http://10.0.2.2:8080';
  }
  
  if (Platform.OS === 'ios') {
    // iPhoneÏùÄ MacÏùò Ïã§Ï†ú IP ÏÇ¨Ïö©
    return `http://${MAC_IP}:8080`;
  }
  
  // Ïõπ ÌôòÍ≤Ω
  return 'http://localhost:8080';
})();

// ÌïòÎÇòÏπ¥Îìú ÏÑúÎ≤Ñ URL (Ïπ¥Îìú Í¥ÄÎ†® APIÏö©)
export const CARD_API_BASE_URL = (() => {
  const MAC_IP = '192.168.123.11';
  
  if (Platform.OS === 'android') {
    return 'http://10.0.2.2:8083';
  }
  
  if (Platform.OS === 'ios') {
    return `http://${MAC_IP}:8083`;
  }
  
  return 'http://localhost:8083';
})();

// Í∞úÎ∞ú Ï§ë ÌôïÏù∏Ïö© Î°úÍ∑∏
if (__DEV__) {
  // eslint-disable-next-line no-console
  console.log('API_BASE_URL =', API_BASE_URL);
}